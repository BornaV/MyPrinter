[gcode_macro START_PRINT]
gcode:
  #PRUSA: 
  ##START_PRINT EXTRUDER_TEMP={first_layer_temperature[0]} BED_TEMP={first_layer_bed_temperature[0]} EXTRUDER_TEMP1={temperature[0]} BED_TEMP1={bed_temperature[0]}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  G90 ; use absolute coordinates
  M83 ; extruder relative mode

  M140 S{BED_TEMP} ; set final bed temp
  M104 S{EXTRUDER_TEMP} ; set final nozzle temp
  G28 ; home all axis

  M190 S{BED_TEMP} ; wait for bed temp to stabilize
  M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize

  G28 Z; home all axis

  DO_Z_OFFSET
  #G4 S10 ; allow partial nozzle warmup

  G1 Z15 F240
  G1 X2 Y10 F3000
  G1 Z0.28 F240
  G92 E0
  G1 Y140 E10 F1500 ; prime the nozzle
  G1 X2.3 F5000
  G92 E0
  G1 Y10 E10 F1200 ; prime the nozzle
  G92 E0 
    # # Start bed heating
    # M140 S{BED_TEMP}
    # # Use absolute coordinates
    # G90
    # # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0.0
    # # Home the printer
    # G28
    # # Move the nozzle near the bed
    # G1 Z5 F3000
    # # Move the nozzle very close to the bed
    # G1 Z0.15 F300
    # # Wait for bed to reach temperature
    # M190 S{BED_TEMP}
    # # Set and wait for nozzle to reach temperature
    # M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
  #END_PRINT
  M140 S0 ; turn off heatbed
  M104 S0 ; turn off temperature
  G91
  G1 E-1 Z+6 F300
  G1 X0 Y218 F1000
  G90
  M84
#     # Turn off bed, extruder, and fan
#     M140 S0
#     M104 S0
#     M106 S0
#     # Move nozzle away from print while retracting
#     G91
#     G1 X-2 Y-2 E-3 F300
#     # Raise nozzle by 10mm
#     G1 Z10 F3000
#     G90
#     # Disable steppers
#     M84

[gcode_macro makemesh]
gcode:
  G28
  G1 Z5 F1500
  G92 Z6
  BED_MESH_CALIBRATE
  G1 Z6 F1500
  G92 Z5

[gcode_macro do_z_offset]
gcode:
  SET_GCODE_OFFSET Z=0
  {% if printer.toolhead.homed_axes != 'xyz' %}      
		G28			#Home All Axes
  {% else %}
        G28 Z
  {% endif %}
  G1 Z8 F1500
  {% if printer.z_tilt.applied != True %}
		Z_TILT_ADJUST # run z tilt
  {% endif %}
  G1 Z8 F1500
  AUTO_OFFSET_Z

[delayed_gcode load_mesh]
gcode:
  BED_MESH_PROFILE LOAD="default"

#[delayed_gcode set_z_offset]
#gcode:
  #SET_GCODE_OFFSET Z_ADJUST=0.75 MOVE=1
[gcode_macro FORCE_MOVE_AXIS]
gcode:
  {% set distance = params.distance|default(10)|float %}
  {% set axis = params.axis|string %}
  { action_respond_info(axis) }
  {% if axis == 'x' or axis == 'X'%}
    FORCE_MOVE STEPPER=stepper_x DISTANCE={distance} VELOCITY=100
  {% elif axis == 'y' or  axis == 'Y'%}
    FORCE_MOVE STEPPER=stepper_y DISTANCE={distance} VELOCITY=100
  {% elif axis == 'z' or  axis == 'Z'%}
    FORCE_MOVE STEPPER=stepper_z DISTANCE={ params.distance} VELOCITY=100
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE={ params.distance} VELOCITY=100
  {% elif axis == 'z1' or  axis == 'Z1'%}
    FORCE_MOVE STEPPER=stepper_z DISTANCE={ params.distance} VELOCITY=100
  {% elif axis == 'z2' or  axis == 'Z2'%}
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE={ params.distance} VELOCITY=100
  {% endif %}

#used to search for the available variables
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}
[gcode_macro move_x]
gcode:
  {% set count = params.count|default(2)|int %}
  G90
  G1 Z15 F300
  {% for iteration in range(count) %}
    G0 X10 F12000
    G0 X250 F12000
  {% endfor %}
[gcode_macro move_y]
gcode:
  {% set count = params.count|default(2)|int %}
  G90
  G1 Z15 F300
  {% for iteration in range(count) %}
    G0 Y10 F12000
    G0 Y210 F12000
  {% endfor %}
